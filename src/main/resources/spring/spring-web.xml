<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd 
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

    <!--配置springMVC-->
    <!--1.开启SpringMVC注解模式-->
    <mvc:annotation-driven/>

    <!--2.静态资源默认servlet配置
    （1）加入对静态资源的处理：js，gif，png
    （2）允许使用“/”做整体映射
    -->
    <mvc:resources mapping="/resources/**" location="./resources/"/>
    <mvc:default-servlet-handler/>

    <!--3定义视图解析器-->
    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/html/"/>
        <property name="suffix" value=".html"/>
    </bean>
    <!--4扫描web相关的bean-->
    <context:component-scan base-package="com.o2o.web"/>

    <!--5.配置拦截器：针对全局配置 -->
    <mvc:interceptors>
        <!-- 使用bean直接定义在<mvc:interceptors>下面的拦截器将拦截所有请求 -->
        <!-- 这个是全局的，当使用下面的拦截器1和拦截器2时，需要把这个拦截器注释掉 -->
<!--        <bean class="com.o2o.web.WebInterceptor"/>-->
<!--        &lt;!&ndash; 定义多个拦截器，顺序执行 &ndash;&gt;-->
        <mvc:interceptor>   <!-- 拦截器1 -->
            <mvc:mapping path="/**"/>     <!-- 配置拦截器作用的路径 /**表示拦截所有url路径包括子url路径-->
            <mvc:exclude-mapping path="/login"/>   <!-- 配置不需要拦截器作用的路径 -->
            <!-- 定义在<mvc:interceptor>下面的拦截器，表示匹配路径请求才进行拦截 -->
            <bean class="com.o2o.web.WebInterceptor"></bean>
        </mvc:interceptor>

    </mvc:interceptors>


</beans>
